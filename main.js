!function(e){var t={};function n(i){if(t[i])return t[i].exports;var o=t[i]={i:i,l:!1,exports:{}};return e[i].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,i){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:i})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var i=Object.create(null);if(n.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(i,o,function(t){return e[t]}.bind(null,o));return i},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){"use strict";function i(e,t){this.bezierSubdivision=8,this.neuronA=e,this.neuronB=t,this.cpLength=e.distanceTo(t)/THREE.Math.randFloat(1.5,4),this.controlPointA=this.getControlPoint(e,t),this.controlPointB=this.getControlPoint(t,e),THREE.CubicBezierCurve3.call(this,this.neuronA,this.controlPointA,this.controlPointB,this.neuronB),this.vertices=this.getSubdividedVertices()}function o(e,t){this.axon=e,this.startingPoint=t}function s(e,t,n){this.minSpeed=t,this.maxSpeed=n,this.speed=THREE.Math.randFloat(this.minSpeed,this.maxSpeed),this.alive=!0,this.t=null,this.startingPoint=null,this.axon=null,this.particle=e.getParticle(),THREE.Vector3.call(this)}function r(e,t,n){this.connection=[],this.receivedSignal=!1,this.lastSignalRelease=0,this.releaseDelay=0,this.fired=!1,this.firedCount=0,this.prevReleaseAxon=null,THREE.Vector3.call(this,e,t,n)}n.r(t),i.prototype=Object.create(THREE.CubicBezierCurve3.prototype),i.prototype.getSubdividedVertices=function(){return this.getSpacedPoints(this.bezierSubdivision)},i.prototype.getControlPoint=function(e,t){var n=(new THREE.Vector3).copy(t).sub(e).normalize(),i=new THREE.Vector3(0,0,1),o=(new THREE.Vector3).crossVectors(i,n).normalize(),s=n.angleTo(i),r=(new THREE.Matrix4).makeRotationAxis(o,s),a=Math.cos(THREE.Math.degToRad(45)),l=THREE.Math.randFloat(a,1),h=THREE.Math.randFloat(0,2*Math.PI),u=Math.sqrt(1-l*l),p=new THREE.Vector3(u*Math.cos(h),u*Math.sin(h),l);return p.multiplyScalar(this.cpLength),p.applyMatrix4(r),p.add(e),p},s.prototype=Object.create(THREE.Vector3.prototype),s.prototype.setConnection=function(e){this.startingPoint=e.startingPoint,this.axon=e.axon,"A"===this.startingPoint?this.t=0:"B"===this.startingPoint&&(this.t=1)},s.prototype.travel=function(e){var t;"A"===this.startingPoint?(this.t+=this.speed*e,this.t>=1&&(this.t=1,this.alive=!1,this.axon.neuronB.receivedSignal=!0,this.axon.neuronB.prevReleaseAxon=this.axon)):"B"===this.startingPoint&&(this.t-=this.speed*e,this.t<=0&&(this.t=0,this.alive=!1,this.axon.neuronA.receivedSignal=!0,this.axon.neuronA.prevReleaseAxon=this.axon)),t=this.axon.getPoint(this.t),this.particle.set(t.x,t.y,t.z)},r.prototype=Object.create(THREE.Vector3.prototype),r.prototype.connectNeuronTo=function(e){var t=new i(this,e);return this.connection.push(new o(t,"A")),e.connection.push(new o(t,"B")),t},r.prototype.createSignal=function(e,t,n){this.firedCount+=1,this.receivedSignal=!1;for(var i=[],o=0;o<this.connection.length;o++)if(this.connection[o].axon!==this.prevReleaseAxon){var r=new s(e,t,n);r.setConnection(this.connection[o]),i.push(r)}return i},r.prototype.reset=function(){this.receivedSignal=!1,this.lastSignalRelease=0,this.releaseDelay=0,this.fired=!1,this.firedCount=0};const a=new THREE.LoadingManager;const l=new THREE.XHRLoader(a);l.setResponseType("text"),l.loadMultiple=function(e,t){_.each(t,function(t,n){l.load(t,function(t){e[n]=t})})};const h={};l.loadMultiple(h,{neuronVert:"shaders/neuron.vert",neuronFrag:"shaders/neuron.frag",axonVert:"shaders/axon.vert",axonFrag:"shaders/axon.frag"});const u={};new THREE.OBJLoader(a).load("models/brain_vertex_low.obj",function(e){u.brain=e.children[0]});const p={};function c(e){this.particlePool=e,this.available=!0,THREE.Vector3.call(this,this.particlePool.offScreenPos.x,this.particlePool.offScreenPos.y,this.particlePool.offScreenPos.z)}function d(e){this.spriteTextureSignal=p.electric,this.poolSize=e,this.pGeom=new THREE.Geometry,this.particles=this.pGeom.vertices,this.offScreenPos=new THREE.Vector3(9999,9999,9999),this.pColor="#ff0000",this.pSize=.6;for(var t=0;t<this.poolSize;t++)this.particles[t]=new c(this);this.meshComponents=new THREE.Object3D,this.pMat=new THREE.PointCloudMaterial({map:this.spriteTextureSignal,size:this.pSize,color:this.pColor,blending:THREE.AdditiveBlending,depthTest:!1,transparent:!0}),this.pMesh=new THREE.PointCloud(this.pGeom,this.pMat),this.pMesh.frustumCulled=!1,this.meshComponents.add(this.pMesh),this.pMat_outer=this.pMat.clone(),this.pMat_outer.size=10*this.pSize,this.pMat_outer.opacity=.04,this.pMesh_outer=new THREE.PointCloud(this.pGeom,this.pMat_outer),this.pMesh_outer.frustumCulled=!1,this.meshComponents.add(this.pMesh_outer)}new THREE.TextureLoader(a).load("sprites/electric.png",function(e){p.electric=e}),c.prototype=Object.create(THREE.Vector3.prototype),c.prototype.free=function(){this.available=!0,this.set(this.particlePool.offScreenPos.x,this.particlePool.offScreenPos.y,this.particlePool.offScreenPos.z)},d.prototype.getAvgExecutionTime=function(){return this.profTime/this.itt},d.prototype.getParticle=function(){for(var e=0;e<this.poolSize;e++){var t=this.particles[e];if(t.available)return this.lastAvailableIdx=e,t.available=!1,t}return console.error("ParticlePool.prototype.getParticle return null"),null},d.prototype.update=function(){this.pGeom.verticesNeedUpdate=!0},d.prototype.updateSettings=function(){this.pMat.color.setStyle(this.pColor),this.pMat.size=this.pSize,this.pMat_outer.color.setStyle(this.pColor),this.pMat_outer.size=10*this.pSize},Detector.webgl||Detector.addGetWebGLMessage();const g=window.innerWidth,f=window.innerHeight,m=window.devicePixelRatio||1,x=g/f,S=new THREE.Clock,E={pause:!1,bgColor:1118483,enableGridHelper:!1,enableAxisHelper:!1},v=document.getElementById("canvas-container"),y=new THREE.Scene,M=new THREE.PerspectiveCamera(75,x,10,5e3),b=new THREE.OrbitControls(M,v);b.object.position.y=150,b.update();const T=new THREE.WebGLRenderer({antialias:!0,alpha:!0});T.setSize(g,f),T.setPixelRatio(m),T.setClearColor(E.bgColor,1),T.autoClear=!1,v.appendChild(T.domElement);const P=new Stats;v.appendChild(P.domElement);var w=new THREE.GridHelper(600,50);w.setColors(48127,16777215),w.material.opacity=.1,w.material.transparent=!0,w.position.y=-300,y.add(w);var C=new THREE.AxisHelper(50);y.add(C);const R="#1923c5";function H(){this.initialized=!1,this.settings={verticesSkipStep:2,maxAxonDist:10,maxConnectionsPerNeuron:6,signalMinSpeed:1.75,signalMaxSpeed:3.25,currentMaxSignals:3e3,limitSignals:1e4},this.meshComponents=new THREE.Object3D,this.particlePool=new d(this.settings.limitSignals),this.meshComponents.add(this.particlePool.meshComponents),this.components={neurons:[],allSignals:[],allAxons:[]},this.axonOpacityMultiplier=.5,this.axonColor="#ffffff",this.axonGeom=new THREE.BufferGeometry,this.axonPositions=[],this.axonIndices=[],this.axonNextPositionsIndex=0,this.axonUniforms={color:{type:"c",value:new THREE.Color(this.axonColor)},opacityMultiplier:{type:"f",value:this.axonOpacityMultiplier}},this.axonAttributes={opacity:{type:"f",value:[]}},this.neuronSizeMultiplier=1,this.spriteTextureNeuron=p.electric,this.neuronColor=R,this.neuronOpacity=.75,this.neuronsGeom=new THREE.Geometry,this.neuronUniforms={sizeMultiplier:{type:"f",value:this.neuronSizeMultiplier},opacity:{type:"f",value:this.neuronOpacity},texture:{type:"t",value:this.spriteTextureNeuron}},this.neuronAttributes={color:{type:"c",value:[]},size:{type:"f",value:[]}},this.neuronShaderMaterial=new THREE.ShaderMaterial({uniforms:this.neuronUniforms,attributes:this.neuronAttributes,vertexShader:null,fragmentShader:null,blending:THREE.AdditiveBlending,transparent:!0,depthTest:!1}),this.numNeurons=0,this.numAxons=0,this.numSignals=0,this.numPassive=0,this.initNeuralNetwork()}var A;function N(){const e=new dat.GUI;e.width=270,(A=e.addFolder("Info")).add(neuralNet,"numNeurons").name("Neurons"),A.add(neuralNet,"numAxons").name("Axons"),A.add(neuralNet,"numSignals",0,neuralNet.settings.limitSignals).name("Signals"),A.autoListen=!1;const t=e.addFolder("Settings");t.add(neuralNet.settings,"currentMaxSignals",0,neuralNet.settings.limitSignals).name("Max Signals"),t.add(neuralNet.particlePool,"pSize",.2,2).name("Signal Size"),t.add(neuralNet.settings,"signalMinSpeed",0,8,.01).name("Signal Min Speed"),t.add(neuralNet.settings,"signalMaxSpeed",0,8,.01).name("Signal Max Speed"),t.add(neuralNet,"neuronSizeMultiplier",0,2).name("Neuron Size Mult"),t.add(neuralNet,"neuronOpacity",0,1).name("Neuron Opacity"),t.add(neuralNet,"axonOpacityMultiplier",0,5).name("Axon Opacity Mult"),t.addColor(neuralNet.particlePool,"pColor").name("Signal Color"),t.addColor(neuralNet,"neuronColor").name("Neuron Color"),t.addColor(neuralNet,"axonColor").name("Axon Color"),t.addColor(E,"bgColor").name("Background"),A.open(),t.open();for(var n=0;n<t.__controllers.length;n++)t.__controllers[n].onChange(z)}function z(){neuralNet.updateSettings(),neuralNet.settings.signalMinSpeed>neuralNet.settings.signalMaxSpeed&&(neuralNet.settings.signalMaxSpeed=neuralNet.settings.signalMinSpeed,gui_settings.__controllers[3].updateDisplay())}H.prototype.initNeuralNetwork=function(){this.initNeurons(u.brain.geometry.vertices),this.initAxons(),this.neuronShaderMaterial.vertexShader=h.neuronVert,this.neuronShaderMaterial.fragmentShader=h.neuronFrag,this.axonShaderMaterial.vertexShader=h.axonVert,this.axonShaderMaterial.fragmentShader=h.axonFrag,this.initialized=!0},H.prototype.initNeurons=function(e){var t;for(t=0;t<e.length;t+=this.settings.verticesSkipStep){var n=e[t],i=new r(n.x,n.y,n.z);this.components.neurons.push(i),this.neuronsGeom.vertices.push(i)}for(t=0;t<this.components.neurons.length;t++)this.neuronAttributes.color.value[t]=new THREE.Color(R),this.neuronAttributes.size.value[t]=THREE.Math.randFloat(.75,3);this.neuronParticles=new THREE.PointCloud(this.neuronsGeom,this.neuronShaderMaterial),this.meshComponents.add(this.neuronParticles),this.neuronShaderMaterial.needsUpdate=!0},H.prototype.initAxons=function(){for(var e=this.components.neurons.length,t=0;t<e;t++)for(var n=this.components.neurons[t],i=t+1;i<e;i++){var o=this.components.neurons[i];if(n!==o&&n.distanceTo(o)<this.settings.maxAxonDist&&n.connection.length<this.settings.maxConnectionsPerNeuron&&o.connection.length<this.settings.maxConnectionsPerNeuron){var s=n.connectNeuronTo(o);this.constructAxonArrayBuffer(s)}}T.getContext().getExtension("OES_element_index_uint")||console.error("32bit index buffer not supported!");var r=new Uint32Array(this.axonIndices),a=new Float32Array(this.axonPositions),l=new Float32Array(this.axonAttributes.opacity.value);this.axonGeom.addAttribute("index",new THREE.BufferAttribute(r,1)),this.axonGeom.addAttribute("position",new THREE.BufferAttribute(a,3)),this.axonGeom.addAttribute("opacity",new THREE.BufferAttribute(l,1)),this.axonGeom.computeBoundingSphere(),this.axonShaderMaterial=new THREE.ShaderMaterial({uniforms:this.axonUniforms,attributes:this.axonAttributes,vertexShader:null,fragmentShader:null,blending:THREE.AdditiveBlending,depthTest:!1,transparent:!0}),this.axonMesh=new THREE.Line(this.axonGeom,this.axonShaderMaterial,THREE.LinePieces),this.meshComponents.add(this.axonMesh);var h=0;for(let t=0;t<e;t++)this.components.neurons[t].connection[0]||(h+=1);console.log("numNotConnected =",h)},H.prototype.update=function(e){if(!this.initialized)return;const t=Date.now();for(let e=0;e<this.components.neurons.length;e++){const n=this.components.neurons[e];this.components.allSignals.length<this.settings.currentMaxSignals-this.settings.maxConnectionsPerNeuron&&n.receivedSignal&&n.firedCount<8&&(n.fired=!0,n.lastSignalRelease=t,n.releaseDelay=THREE.Math.randInt(100,1e3),this.releaseSignalAt(n)),n.receivedSignal=!1}0===this.components.allSignals.length&&(this.resetAllNeurons(),this.releaseSignalAt(this.components.neurons[THREE.Math.randInt(0,this.components.neurons.length)]));for(var n=this.components.allSignals.length-1;n>=0;n--){var i=this.components.allSignals[n];if(i.travel(e),!i.alive){i.particle.free();for(var o=this.components.allSignals.length-1;o>=0;o--)if(i===this.components.allSignals[o]){this.components.allSignals.splice(o,1);break}}}this.particlePool.update(),this.updateInfo()},H.prototype.constructAxonArrayBuffer=function(e){this.components.allAxons.push(e);var t=e.vertices;for(let e=0;e<t.length;e++){if(this.axonPositions.push(t[e].x,t[e].y,t[e].z),e<t.length-1){var n=this.axonNextPositionsIndex;this.axonIndices.push(n,n+1);var i=THREE.Math.randFloat(.005,.2);this.axonAttributes.opacity.value.push(i,i)}this.axonNextPositionsIndex+=1}},H.prototype.releaseSignalAt=function(e){var t=e.createSignal(this.particlePool,this.settings.signalMinSpeed,this.settings.signalMaxSpeed);for(let e=0;e<t.length;e++){var n=t[e];this.components.allSignals.push(n)}},H.prototype.resetAllNeurons=function(){this.numPassive=0;for(let e=0;e<this.components.neurons.length;e++){const t=this.components.neurons[e];t.fired||(this.numPassive+=1),t.reset()}},H.prototype.updateInfo=function(){this.numNeurons=this.components.neurons.length,this.numAxons=this.components.allAxons.length,this.numSignals=this.components.allSignals.length},H.prototype.updateSettings=function(){this.neuronUniforms.opacity.value=this.neuronOpacity;for(let e=0;e<this.components.neurons.length;e++)this.neuronAttributes.color.value[e].setStyle(this.neuronColor);this.neuronAttributes.color.needsUpdate=!0,this.neuronUniforms.sizeMultiplier.value=this.neuronSizeMultiplier,this.axonUniforms.color.value.set(this.axonColor),this.axonUniforms.opacityMultiplier.value=this.axonOpacityMultiplier,this.particlePool.updateSettings()},H.prototype.testChangOpcAttr=function(){for(var e=this.axonGeom.attributes.opacity.array,t=0;t<e.length;t++)e[t]=THREE.Math.randFloat(0,.5);this.axonGeom.attributes.opacity.needsUpdate=!0};function G(){if(C.visible=E.enableAxisHelper,w.visible=E.enableGridHelper,!E.pause){var e=S.getDelta();neuralNet.update(e),function(){for(var e=0;e<A.__controllers.length;e++)A.__controllers[e].updateDisplay()}()}}function O(){requestAnimationFrame(O),T.setClearColor(E.bgColor,1),T.clear(),G(),T.render(y,M),P.update(),0}window.addEventListener("keypress",function(e){switch(e.keyCode){case 32:E.pause=!E.pause;break;case 65:case 97:E.enableGridHelper=!E.enableGridHelper;break;case 83:case 115:E.enableAxisHelper=!E.enableAxisHelper}}),$(function(){var e;$(window).resize(function(){clearTimeout(e),e=setTimeout(function(){!function(){const e=window.innerWidth,t=window.innerHeight,n=window.devicePixelRatio||1,i=e/t;M.aspect=i,M.updateProjectionMatrix(),T.setSize(e,t),T.setPixelRatio(n)}()},250)})}),(e=>{a.onLoad=function(){document.getElementById("loading").style.display="none",console.log("Done."),e()},a.onProgress=function(e,t,n){console.log(t+"/"+n,e)}})(function(){var e=window.neuralNet=new H;y.add(e.meshComponents),N(),O()})}]);